version: 0.2

# env:
#   variables:
#     AWS_ACCOUNT_ID: "891377353125"
#     AWS_DEFAULT_REGION: "ap-south-1"
#     IMAGE_REPO_NAME: "appimagerepo"
#     IMAGE_TAG: "build-$(echo $CODEBUILD_BUILD_NUMBER)"
#     # CONTAINER_NAME: "blue-green"
#     REPOSITORY_URL: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password | docker login --username AWS --password-stdin $REPOSITORY_URI
      # - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_NUMBER)
      # - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Docker build and tagging started on `date`
      # - docker build -t $REPOSITORY_URL:latest .
      # - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - echo Docker build and tagging completed on `date`
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG 
      # - docker push $REPOSITORY_URI:latest
      # - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Update the REPOSITORY_URI:IMAGE_TAG in task definition...
      - echo Container image to be used $REPOSITORY_URI:$IMAGE_TAG
      - sed -i 's@REPOSITORY_URI@'$REPOSITORY_URI'@g' taskdef.json
      - sed -i 's@IMAGE_TAG@'$IMAGE_TAG'@g' taskdef.json
      - echo update the REGION in task definition...
      - sed -i 's@AWS_REGION@'$AWS_REGION'@g' taskdef.json
      - echo update the roles in task definition...
      - sed -i 's@TASK_EXECUTION_ARN@'$TASK_EXECUTION_ARN'@g' taskdef.json
artifacts:
  files:
    - "appspec.yaml"
    - "taskdef.json"
